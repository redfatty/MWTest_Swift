/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: social.proto
 *
 */

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

struct Bbproto_PFriendCount: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".PFriendCount"

  /// 好友数量
  var count: Int64 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt64Field(value: &self.count)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.count != 0 {
      try visitor.visitSingularInt64Field(value: self.count, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// 搜索用户信息
struct Bbproto_PSearchUser: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".PSearchUser"

  /// 是否已经是好友
  var isFriend: Bool {
    get {return _storage._isFriend}
    set {_uniqueStorage()._isFriend = newValue}
  }

  /// 是否已经申请好友
  var isFollowing: Bool {
    get {return _storage._isFollowing}
    set {_uniqueStorage()._isFollowing = newValue}
  }

  ///保留3~6用于扩展
  var user: Bbproto_PUser {
    get {return _storage._user ?? Bbproto_PUser()}
    set {_uniqueStorage()._user = newValue}
  }
  /// Returns true if `user` has been explicitly set.
  var hasUser: Bool {return _storage._user != nil}
  /// Clears the value of `user`. Subsequent reads from it will return its default value.
  mutating func clearUser() {_storage._user = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularBoolField(value: &_storage._isFriend)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._isFollowing)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._user)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._isFriend != false {
        try visitor.visitSingularBoolField(value: _storage._isFriend, fieldNumber: 1)
      }
      if _storage._isFollowing != false {
        try visitor.visitSingularBoolField(value: _storage._isFollowing, fieldNumber: 2)
      }
      if let v = _storage._user {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass()
}

/// 搜索用户返回列表
struct Bbproto_PSearchUserList: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".PSearchUserList"

  var searchUsers: [Bbproto_PSearchUser] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.searchUsers)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.searchUsers.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.searchUsers, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// 是否是好友信息列表
struct Bbproto_PIsFriendList: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".PIsFriendList"

  /// 是否是好友
  var isFriend: [Bool] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedBoolField(value: &self.isFriend)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.isFriend.isEmpty {
      try visitor.visitPackedBoolField(value: self.isFriend, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bbproto"

extension Bbproto_PFriendCount: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "count"),
  ]

  func _protobuf_generated_isEqualTo(other: Bbproto_PFriendCount) -> Bool {
    if self.count != other.count {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bbproto_PSearchUser: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "isFriend"),
    2: .same(proto: "isFollowing"),
    7: .same(proto: "user"),
  ]

  fileprivate class _StorageClass {
    var _isFriend: Bool = false
    var _isFollowing: Bool = false
    var _user: Bbproto_PUser? = nil

    init() {}

    init(copying source: _StorageClass) {
      _isFriend = source._isFriend
      _isFollowing = source._isFollowing
      _user = source._user
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  func _protobuf_generated_isEqualTo(other: Bbproto_PSearchUser) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._isFriend != other_storage._isFriend {return false}
        if _storage._isFollowing != other_storage._isFollowing {return false}
        if _storage._user != other_storage._user {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bbproto_PSearchUserList: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "searchUsers"),
  ]

  func _protobuf_generated_isEqualTo(other: Bbproto_PSearchUserList) -> Bool {
    if self.searchUsers != other.searchUsers {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bbproto_PIsFriendList: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "isFriend"),
  ]

  func _protobuf_generated_isEqualTo(other: Bbproto_PIsFriendList) -> Bool {
    if self.isFriend != other.isFriend {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
